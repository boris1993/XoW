name: Code analysis

on:
  push:
    branches: [ "master" ]
    paths: [ 'XoW.sln', 'XoW/**', '.github/workflows/code_analysis.yml' ]
  pull_request:
    types: [ opened, synchronize, reopened ]
    paths: [ 'XoW.sln', 'XoW/**', '.github/workflows/code_analysis.yml' ]
  workflow_dispatch: 

jobs:
  build:
    name: Code analysis
    runs-on: windows-latest
    steps:
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          distribution: 'liberica'
          java-version: 17

      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~\sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache SonarCloud scanner
        id: cache-sonar-scanner
        uses: actions/cache@v3
        with:
          path: .\.sonar\scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner

      - name: Install SonarCloud scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        shell: powershell
        run: |
          New-Item -Path .\.sonar\scanner -ItemType Directory
          dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner

      - name: Install signing certificate
        shell: pwsh
        env:
          PFX_CONTENT: ${{ secrets.SIGNING_CERTIFICATE }}
          SIGNING_CERTIFICATE_PASSWORD: ${{ secrets.SIGNING_CERTIFICATE_PASSWORD }}
        run: |
          echo "Saving the certificate to $($env:RUNNER_TEMP)";
          $pfxPath = Join-Path -Path $env:RUNNER_TEMP -ChildPath "cert.pfx";
          $encodedBytes = [System.Convert]::FromBase64String($env:PFX_CONTENT);
          Set-Content $pfxPath -Value $encodedBytes -AsByteStream;
          echo "Installing certificate from $($env:RUNNER_TEMP)\cert.pfx";
          Import-PfxCertificate -FilePath "$($env:RUNNER_TEMP)\cert.pfx" -CertStoreLocation Cert:\CurrentUser\My -Password (ConvertTo-SecureString -String $env:SIGNING_CERTIFICATE_PASSWORD -Force -AsPlainText);

      - name: Add AppConfig.xml to working directory
        shell: pwsh
        env:
          APP_CONFIG_XML: ${{ secrets.APP_CONFIG_XML }}
        run: |
          echo "Adding AppConfig.xml to $($env:GITHUB_WORKSPACE)\XoW";
          $filePath = Join-Path -Path "$($env:GITHUB_WORKSPACE)\XoW" -ChildPath "AppConfig.xml";
          $encodedBytes = [System.Convert]::FromBase64String($env:APP_CONFIG_XML);
          Set-Content $filePath -Value $encodedBytes -AsByteStream;
      
      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@v1

      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        shell: powershell
        run: |
          .\.sonar\scanner\dotnet-sonarscanner begin /k:"boris1993_XoW" /o:"boris1993-github" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io"
          msbuild "XoW.sln" /restore /m /t:Rebuild /nr:false /p:AppxBundle=Always /p:UapAppxPackageBuildMode=StoreUpload /p:AppxBundlePlatforms="x86|x64|ARM|ARM64" /p:configuration="Debug" /p:VisualStudioVersion="17.0"
          .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"
    
