name: "CodeQL"

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  analyze:
    name: Analyze
    runs-on: windows-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        language: [ 'csharp' ]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    # Initializes the CodeQL tools for scanning.
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v2
      with:
        languages: ${{ matrix.language }}

    - name: Install signing certificate
      shell: pwsh
      env: 
        PFX_CONTENT: ${{ secrets.SIGNING_CERTIFICATE }}
        SIGNING_CERTIFICATE_PASSWORD: ${{ secrets.SIGNING_CERTIFICATE_PASSWORD }}
      run: |
        echo "Saving the certificate to $($env:RUNNER_TEMP)";
        $pfxPath = Join-Path -Path $env:RUNNER_TEMP -ChildPath "cert.pfx";
        $encodedBytes = [System.Convert]::FromBase64String($env:PFX_CONTENT);
        Set-Content $pfxPath -Value $encodedBytes -AsByteStream;
        echo "Installing certificate from $($env:RUNNER_TEMP)\cert.pfx";
        Import-PfxCertificate -FilePath "$($env:RUNNER_TEMP)\cert.pfx" -CertStoreLocation Cert:\CurrentUser\My -Password (ConvertTo-SecureString -String $env:SIGNING_CERTIFICATE_PASSWORD -Force -AsPlainText);

    - name: Add AppConfig.xml to working directory
      shell: pwsh
      env:
        APP_CONFIG_XML: ${{ secrets.APP_CONFIG_XML }}
      run: |
        echo "Adding AppConfig.xml to $env:GITHUB_WORKSPACE";
        $filePath = Join-Path -Path $env:GITHUB_WORKSPACE -ChildPath "AppConfig.xml";
        $encodedBytes = [System.Convert]::FromBase64String($env:APP_CONFIG_XML);
        Set-Content $filePath -Value $encodedBytes -AsByteStream;

    - name: Autobuild
      uses: github/codeql-action/autobuild@v2

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v2
